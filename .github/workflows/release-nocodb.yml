name: 'NocoDB Release'

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Target Tag"
        required: false
      prev_tag:
        description: "Previous Tag"
        required: false
jobs:
  # Validate Branch
#   validate-branch:
#     runs-on: ubuntu-latest
#     steps:
#       - run: |
#           echo ${{ github.ref }}
#           echo $GITHUB_REF
#           echo "${GITHUB_REF##*/}"
#           if [[ ${{ github.ref }} != 'refs/heads/master' ]]; then
#             echo "NocoDB Release is only allowed to run on master branch"
#             exit 1
#           fi

  # Process Input
  process-input:
    runs-on: ubuntu-latest
#     needs: validate-branch
    outputs:
      target_tag: ${{ steps.process-input.outputs.target_tag }}
      prev_tag: ${{ steps.process-input.outputs.prev_tag }}
    steps:
      - id: process-input
        name: process-input
        run: |
          TARGET_TAG=${{github.event.inputs.tag}}
          PREV_TAG=${{github.event.inputs.prev_tag}}

          if [[ ${PREV_TAG} == '' ]]; then
            # fetch the latest version
            PREV_TAG=$(basename $(curl -fs -o/dev/null -w %{redirect_url} https://github.com/nocodb/nocodb/releases/latest))
          fi

          if [[ ${TARGET_TAG} == '' ]]; then
            # bump the version from PREV_TAG
            TARGET_TAG=$(echo ${PREV_TAG} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          fi
          echo target version: ${TARGET_TAG}
          echo previous version: ${PREV_TAG}
          echo "::set-output name=target_tag::${TARGET_TAG}"
          echo "::set-output name=prev_tag::${PREV_TAG}"
      - name: Verifiy
        run : |
          echo ${{ github.ref }}
          echo $GITHUB_REF
          echo ${{ steps.process-input.outputs.target_tag }} 

  # Draft Release Note
  release-draft-note:
    needs: [process-input]
    uses: ./.github/workflows/release-draft.yml
    with:
      tag: ${{ needs.process-input.outputs.target_tag }}
      prev_tag: ${{ needs.process-input.outputs.prev_tag }}
    secrets:
      NC_GITHUB_TOKEN: "${{ secrets.NC_GITHUB_TOKEN }}"
